<?xml version="1.0" encoding="UTF-8"?>
<!-- debug=是否打印logback内部日志 scan=是否重新加载  scanPeriod=多久扫描一次  -->
<configuration  debug="true" scan="true" scanPeriod="30 seconds">
	<!--输出到控制台的appender-->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

	<!--输出到文件的appende-->
	<appender name="rollingFile"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>/tmp/logs/quickstart.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/tmp/logs/quickstart.%d{yyyy-MM-dd}.log</fileNamePattern>
		</rollingPolicy>
		<encoder>
			<pattern>%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

  	<!--日志输出级别 TRACE < DEBUG < INFO < WARN < ERROR -->
	<!--TRACE能输出所有类型的日志信息，DEBUG不会输出TRACE类型的日志信息，以此类推-->

	<!--
		不指定level的logger会继承上级节点的日志级别，将打印信息向上级传递
		没有设置addtivity，默认为true，将此loger的打印信息向上级传递；
		没有设置appender，此loger本身不打印任何信息。
	-->
	<logger name="com.lhc.log"></logger>

	<!--com.lhc.log.LogDemoApplication：类的全路径 -->
	<!--控制com.lhc.log.LogDemoApplication类的日志打印，打印级别为“INFO”；
		additivity属性为false，表示此logger的打印信息不再向上级传递，
		指定了名字为“console”的appender。-->
	<logger name="com.lhc.log.LogDemoApplication" level="INFO" additivity="true">
		<appender-ref ref="console"/>
	</logger>

	<!--根目录属性，每个logback文件中，只有一个level属性，设置整个项目的日志输出水平。如果设置多个root的话，以最高的level为准-->
	<!--<root level="DEBUG">将root的打印级别设置为“DEBUG”，指定了名字为“console”的appender。-->
	<!--TRACE级别比DEBUG低，以DEBUG级别为准-->
	<root level="TRACE">
		<appender-ref ref="console" />

	</root>
	<root level="DEBUG">
		<appender-ref ref="console" />

	</root>
</configuration>